/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as UnauthenticatedImport } from './routes/_unauthenticated'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/_dashboard'
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/_dashboard/index'
import { Route as UnauthenticatedOnboardingVerifyUserImport } from './routes/_unauthenticated/_onboarding/verify-user'
import { Route as UnauthenticatedOnboardingLoginImport } from './routes/_unauthenticated/_onboarding/login'
import { Route as AuthenticatedDashboardSupportImport } from './routes/_authenticated/_dashboard/support'
import { Route as AuthenticatedDashboardProfileImport } from './routes/_authenticated/_dashboard/profile'
import { Route as AuthenticatedDashboardXrayLabImport } from './routes/_authenticated/_dashboard/xray/lab'

// Create Virtual Routes

const UnauthenticatedOnboardingLazyImport = createFileRoute(
  '/_unauthenticated/_onboarding',
)()
const UnauthenticatedOnboardingRegisterSuccessLazyImport = createFileRoute(
  '/_unauthenticated/_onboarding/register-success',
)()
const UnauthenticatedOnboardingRegisterLazyImport = createFileRoute(
  '/_unauthenticated/_onboarding/register',
)()
const UnauthenticatedOnboardingForgotPasswordLazyImport = createFileRoute(
  '/_unauthenticated/_onboarding/forgot-password',
)()

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedOnboardingLazyRoute =
  UnauthenticatedOnboardingLazyImport.update({
    id: '/_onboarding',
    getParentRoute: () => UnauthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_unauthenticated/_onboarding.lazy').then((d) => d.Route),
  )

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const UnauthenticatedOnboardingRegisterSuccessLazyRoute =
  UnauthenticatedOnboardingRegisterSuccessLazyImport.update({
    path: '/register-success',
    getParentRoute: () => UnauthenticatedOnboardingLazyRoute,
  } as any).lazy(() =>
    import('./routes/_unauthenticated/_onboarding/register-success.lazy').then(
      (d) => d.Route,
    ),
  )

const UnauthenticatedOnboardingRegisterLazyRoute =
  UnauthenticatedOnboardingRegisterLazyImport.update({
    path: '/register',
    getParentRoute: () => UnauthenticatedOnboardingLazyRoute,
  } as any).lazy(() =>
    import('./routes/_unauthenticated/_onboarding/register.lazy').then(
      (d) => d.Route,
    ),
  )

const UnauthenticatedOnboardingForgotPasswordLazyRoute =
  UnauthenticatedOnboardingForgotPasswordLazyImport.update({
    path: '/forgot-password',
    getParentRoute: () => UnauthenticatedOnboardingLazyRoute,
  } as any).lazy(() =>
    import('./routes/_unauthenticated/_onboarding/forgot-password.lazy').then(
      (d) => d.Route,
    ),
  )

const UnauthenticatedOnboardingVerifyUserRoute =
  UnauthenticatedOnboardingVerifyUserImport.update({
    path: '/verify-user',
    getParentRoute: () => UnauthenticatedOnboardingLazyRoute,
  } as any)

const UnauthenticatedOnboardingLoginRoute =
  UnauthenticatedOnboardingLoginImport.update({
    path: '/login',
    getParentRoute: () => UnauthenticatedOnboardingLazyRoute,
  } as any)

const AuthenticatedDashboardSupportRoute =
  AuthenticatedDashboardSupportImport.update({
    path: '/support',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedDashboardProfileRoute =
  AuthenticatedDashboardProfileImport.update({
    path: '/profile',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedDashboardXrayLabRoute =
  AuthenticatedDashboardXrayLabImport.update({
    path: '/xray/lab',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_dashboard': {
      id: '/_authenticated/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_unauthenticated/_onboarding': {
      id: '/_unauthenticated/_onboarding'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedOnboardingLazyImport
      parentRoute: typeof UnauthenticatedImport
    }
    '/_authenticated/_dashboard/profile': {
      id: '/_authenticated/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedDashboardProfileImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/_dashboard/support': {
      id: '/_authenticated/_dashboard/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof AuthenticatedDashboardSupportImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_unauthenticated/_onboarding/login': {
      id: '/_unauthenticated/_onboarding/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedOnboardingLoginImport
      parentRoute: typeof UnauthenticatedOnboardingLazyImport
    }
    '/_unauthenticated/_onboarding/verify-user': {
      id: '/_unauthenticated/_onboarding/verify-user'
      path: '/verify-user'
      fullPath: '/verify-user'
      preLoaderRoute: typeof UnauthenticatedOnboardingVerifyUserImport
      parentRoute: typeof UnauthenticatedOnboardingLazyImport
    }
    '/_unauthenticated/_onboarding/forgot-password': {
      id: '/_unauthenticated/_onboarding/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof UnauthenticatedOnboardingForgotPasswordLazyImport
      parentRoute: typeof UnauthenticatedOnboardingLazyImport
    }
    '/_unauthenticated/_onboarding/register': {
      id: '/_unauthenticated/_onboarding/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof UnauthenticatedOnboardingRegisterLazyImport
      parentRoute: typeof UnauthenticatedOnboardingLazyImport
    }
    '/_unauthenticated/_onboarding/register-success': {
      id: '/_unauthenticated/_onboarding/register-success'
      path: '/register-success'
      fullPath: '/register-success'
      preLoaderRoute: typeof UnauthenticatedOnboardingRegisterSuccessLazyImport
      parentRoute: typeof UnauthenticatedOnboardingLazyImport
    }
    '/_authenticated/_dashboard/': {
      id: '/_authenticated/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/_dashboard/xray/lab': {
      id: '/_authenticated/_dashboard/xray/lab'
      path: '/xray/lab'
      fullPath: '/xray/lab'
      preLoaderRoute: typeof AuthenticatedDashboardXrayLabImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedDashboardRoute: AuthenticatedDashboardRoute.addChildren({
      AuthenticatedDashboardProfileRoute,
      AuthenticatedDashboardSupportRoute,
      AuthenticatedDashboardIndexRoute,
      AuthenticatedDashboardXrayLabRoute,
    }),
  }),
  UnauthenticatedRoute: UnauthenticatedRoute.addChildren({
    UnauthenticatedOnboardingLazyRoute:
      UnauthenticatedOnboardingLazyRoute.addChildren({
        UnauthenticatedOnboardingLoginRoute,
        UnauthenticatedOnboardingVerifyUserRoute,
        UnauthenticatedOnboardingForgotPasswordLazyRoute,
        UnauthenticatedOnboardingRegisterLazyRoute,
        UnauthenticatedOnboardingRegisterSuccessLazyRoute,
      }),
  }),
  LogoutRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_unauthenticated",
        "/logout"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_dashboard"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated.tsx",
      "children": [
        "/_unauthenticated/_onboarding"
      ]
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_authenticated/_dashboard": {
      "filePath": "_authenticated/_dashboard.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_dashboard/profile",
        "/_authenticated/_dashboard/support",
        "/_authenticated/_dashboard/",
        "/_authenticated/_dashboard/xray/lab"
      ]
    },
    "/_unauthenticated/_onboarding": {
      "filePath": "_unauthenticated/_onboarding.lazy.tsx",
      "parent": "/_unauthenticated",
      "children": [
        "/_unauthenticated/_onboarding/login",
        "/_unauthenticated/_onboarding/verify-user",
        "/_unauthenticated/_onboarding/forgot-password",
        "/_unauthenticated/_onboarding/register",
        "/_unauthenticated/_onboarding/register-success"
      ]
    },
    "/_authenticated/_dashboard/profile": {
      "filePath": "_authenticated/_dashboard/profile.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/support": {
      "filePath": "_authenticated/_dashboard/support.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_unauthenticated/_onboarding/login": {
      "filePath": "_unauthenticated/_onboarding/login.tsx",
      "parent": "/_unauthenticated/_onboarding"
    },
    "/_unauthenticated/_onboarding/verify-user": {
      "filePath": "_unauthenticated/_onboarding/verify-user.tsx",
      "parent": "/_unauthenticated/_onboarding"
    },
    "/_unauthenticated/_onboarding/forgot-password": {
      "filePath": "_unauthenticated/_onboarding/forgot-password.lazy.tsx",
      "parent": "/_unauthenticated/_onboarding"
    },
    "/_unauthenticated/_onboarding/register": {
      "filePath": "_unauthenticated/_onboarding/register.lazy.tsx",
      "parent": "/_unauthenticated/_onboarding"
    },
    "/_unauthenticated/_onboarding/register-success": {
      "filePath": "_unauthenticated/_onboarding/register-success.lazy.tsx",
      "parent": "/_unauthenticated/_onboarding"
    },
    "/_authenticated/_dashboard/": {
      "filePath": "_authenticated/_dashboard/index.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/xray/lab": {
      "filePath": "_authenticated/_dashboard/xray/lab.tsx",
      "parent": "/_authenticated/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
